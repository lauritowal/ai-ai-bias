{
    "item_type": "proposal",
    "title": "Symbol Elimination in Reliable System Engineering",
    "abstract": "We are living in a world that is increasingly run by software. Daily activities, such as online banking, mobile communications and air traffic use, are controlled by software. This software is growing in size and functionality, but its reliability is hardly improving. We are getting used to the fact that that computer systems are error-prone and insecure. To (re)gain the trust of end-users in software and Web services, formal automated reasoning is one of the main investments made by ICT companies in preventing software errors. To improve in this area, one should answer some important questions, such as - Which methods in automated reasoning are the most appropriate for proving software error-free? - What needs to be done to apply research in automated reasoning to large-scale code bases? Our SYMELS project aims at answering these questions by bringing our symbol elimination method to the ICT market. The key innovation brought in by SYMELS is the ability to automatically generate and prove first-order properties of software that prevent programmers from introducing errors while making changes in this software. Our initial results show that symbol elimination can be a breakthrough method: e.g. when testing programs manipulating computer memory it was able to prove that over 80% of test cases are guaranteed to have the expected behavior. Most of these test problems were coming from industry, where similar proofs required very costly human work. Analyzing such programs requires reasoning about program properties in full first-order logic. No other method can reason about such properties with the same accuracy and expressiveness as SYMELS. For the proof-of-concept, SYMELS gives ICT customers and investors a tool-supported methodology for ensuring continuous growth in software functionality, thus increasing software reliability and user's trust in software technologies.",
    "origin": "Human"
}